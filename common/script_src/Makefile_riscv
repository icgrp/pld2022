
RISCV_GNU_TOOLCHAIN_GIT_REVISION = 411d134
RISCV_GNU_TOOLCHAIN_INSTALL_PREFIX = /opt/riscv32

# Give the user some easy overrides for local configuration quirks.
# If you change one of these and it breaks, then you get to keep both pieces.
SHELL = bash
PYTHON = python3
#MEM_SIZE = 65536
MEM_SIZE = 4096
VERILATOR = verilator 
ICARUS_SUFFIX = 
IVERILOG = iverilog$(ICARUS_SUFFIX)
VVP = vvp$(ICARUS_SUFFIX)

TEST_OBJS = $(addsuffix .o,$(basename $(wildcard tests/*.S)))
FIRMWARE_OBJS = riscv/start.o riscv/print.o  riscv/stream.o riscv/main.o  riscv/data_redir_m.o 
#GCC_WARNS  = -Werror -Wall -Wextra -Wshadow -Wundef -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings
GCC_WARNS  =  -Wall -Wextra -Wshadow -Wundef -Wpointer-arith -Wcast-qual -Wcast-align -Wwrite-strings
GCC_WARNS += -Wredundant-decls -pedantic # -Wconversion
TOOLCHAIN_PREFIX = $(RISCV_GNU_TOOLCHAIN_INSTALL_PREFIX)i/bin/riscv32-unknown-elf-
TOOLCHAIN_DUMP = $(RISCV_GNU_TOOLCHAIN_INSTALL_PREFIX)i/bin/riscv32-unknown-elf-objdump
#COMPRESSED_ISA = C
COMPRESSED_ISA = 
IDIR = -fno-threadsafe-statics -lstdc++ 
# Add things like "export http_proxy=... https_proxy=..." here
GIT_ENV = true

test: testbench.vvp riscv/firmware.hex
	$(VVP) -N $< +trace=1+vcd


testbench.vvp: ./src/*.v 
	$(IVERILOG) -o $@ $(subst C,-DCOMPRESSED_ISA,$(COMPRESSED_ISA)) $^
	chmod -x $@

riscv/firmware.hex: riscv/firmware.bin riscv/makehex.py
	$(PYTHON) riscv/makehex.py $< $(MEM_SIZE) > $@

riscv/firmware.bin: riscv/firmware.elf
	$(TOOLCHAIN_PREFIX)objcopy -O binary $< $@
	chmod -x $@

riscv/firmware.elf: $(FIRMWARE_OBJS) $(TEST_OBJS) riscv/sections.lds
	$(TOOLCHAIN_PREFIX)g++ -Os -ffreestanding -o $@ \
		-Wl,-Bstatic,-T,riscv/sections.lds,-Map,riscv/firmware.map,--strip-debug \
		$(FIRMWARE_OBJS) $(TEST_OBJS) -lgcc $(IDIR)
	chmod -x $@

riscv/start.o: riscv/start.S
	$(TOOLCHAIN_PREFIX)g++ -c -march=rv32im$(subst C,c,$(COMPRESSED_ISA)) -o $@ $< $(IDIR)

riscv/%.o: riscv/%.cpp
	$(TOOLCHAIN_PREFIX)g++ -c -march=rv32i$(subst C,c,$(COMPRESSED_ISA)) -Os  $(GCC_WARNS) -ffreestanding -nostdlib -o $@ $< $(IDIR)


dump:
	$(TOOLCHAIN_DUMP) -S ./riscv/firmware.elf > ./start.S




clean:
	rm -rf riscv-gnu-toolchain-riscv32i riscv-gnu-toolchain-riscv32ic \
		riscv-gnu-toolchain-riscv32im riscv-gnu-toolchain-riscv32imc
	rm -vrf $(FIRMWARE_OBJS) $(TEST_OBJS) check.smt2 check.vcd synth.v synth.log \
		riscv/firmware.elf riscv/firmware.bin riscv/firmware*.hex riscv/firmware*.hex riscv/firmware.map \
		testbench.vvp testbench_sp.vvp testbench_synth.vvp testbench_ez.vvp \
		testbench_rvf.vvp testbench_wb.vvp testbench.vcd testbench.trace \
		testbench_verilator testbench_verilator_dir
	rm -rf ./start.S
.PHONY: test test_vcd test_sp test_axi test_wb test_wb_vcd test_ez test_ez_vcd test_synth download-tools build-tools toc clean
