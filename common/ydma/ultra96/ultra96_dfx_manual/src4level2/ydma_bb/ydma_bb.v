// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.1 (64-bit)
// Version: 2021.1
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="ydma_ydma,hls_ip_2021_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-i,HLS_INPUT_CLOCK=6.667000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.866910,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=127,HLS_SYN_DSP=0,HLS_SYN_FF=5041,HLS_SYN_LUT=5806,HLS_VERSION=2021_1}" *)

module ydma_bb (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        event_done,
        interrupt,
        event_start,
        m_axi_aximm1_AWVALID,
        m_axi_aximm1_AWREADY,
        m_axi_aximm1_AWADDR,
        m_axi_aximm1_AWID,
        m_axi_aximm1_AWLEN,
        m_axi_aximm1_AWSIZE,
        m_axi_aximm1_AWBURST,
        m_axi_aximm1_AWLOCK,
        m_axi_aximm1_AWCACHE,
        m_axi_aximm1_AWPROT,
        m_axi_aximm1_AWQOS,
        m_axi_aximm1_AWREGION,
        m_axi_aximm1_AWUSER,
        m_axi_aximm1_WVALID,
        m_axi_aximm1_WREADY,
        m_axi_aximm1_WDATA,
        m_axi_aximm1_WSTRB,
        m_axi_aximm1_WLAST,
        m_axi_aximm1_WID,
        m_axi_aximm1_WUSER,
        m_axi_aximm1_ARVALID,
        m_axi_aximm1_ARREADY,
        m_axi_aximm1_ARADDR,
        m_axi_aximm1_ARID,
        m_axi_aximm1_ARLEN,
        m_axi_aximm1_ARSIZE,
        m_axi_aximm1_ARBURST,
        m_axi_aximm1_ARLOCK,
        m_axi_aximm1_ARCACHE,
        m_axi_aximm1_ARPROT,
        m_axi_aximm1_ARQOS,
        m_axi_aximm1_ARREGION,
        m_axi_aximm1_ARUSER,
        m_axi_aximm1_RVALID,
        m_axi_aximm1_RREADY,
        m_axi_aximm1_RDATA,
        m_axi_aximm1_RLAST,
        m_axi_aximm1_RID,
        m_axi_aximm1_RUSER,
        m_axi_aximm1_RRESP,
        m_axi_aximm1_BVALID,
        m_axi_aximm1_BREADY,
        m_axi_aximm1_BRESP,
        m_axi_aximm1_BID,
        m_axi_aximm1_BUSER,
        m_axi_aximm2_AWVALID,
        m_axi_aximm2_AWREADY,
        m_axi_aximm2_AWADDR,
        m_axi_aximm2_AWID,
        m_axi_aximm2_AWLEN,
        m_axi_aximm2_AWSIZE,
        m_axi_aximm2_AWBURST,
        m_axi_aximm2_AWLOCK,
        m_axi_aximm2_AWCACHE,
        m_axi_aximm2_AWPROT,
        m_axi_aximm2_AWQOS,
        m_axi_aximm2_AWREGION,
        m_axi_aximm2_AWUSER,
        m_axi_aximm2_WVALID,
        m_axi_aximm2_WREADY,
        m_axi_aximm2_WDATA,
        m_axi_aximm2_WSTRB,
        m_axi_aximm2_WLAST,
        m_axi_aximm2_WID,
        m_axi_aximm2_WUSER,
        m_axi_aximm2_ARVALID,
        m_axi_aximm2_ARREADY,
        m_axi_aximm2_ARADDR,
        m_axi_aximm2_ARID,
        m_axi_aximm2_ARLEN,
        m_axi_aximm2_ARSIZE,
        m_axi_aximm2_ARBURST,
        m_axi_aximm2_ARLOCK,
        m_axi_aximm2_ARCACHE,
        m_axi_aximm2_ARPROT,
        m_axi_aximm2_ARQOS,
        m_axi_aximm2_ARREGION,
        m_axi_aximm2_ARUSER,
        m_axi_aximm2_RVALID,
        m_axi_aximm2_RREADY,
        m_axi_aximm2_RDATA,
        m_axi_aximm2_RLAST,
        m_axi_aximm2_RID,
        m_axi_aximm2_RUSER,
        m_axi_aximm2_RRESP,
        m_axi_aximm2_BVALID,
        m_axi_aximm2_BREADY,
        m_axi_aximm2_BRESP,
        m_axi_aximm2_BID,
        m_axi_aximm2_BUSER,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 7;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM1_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM1_DATA_WIDTH = 64;
parameter    C_M_AXI_AXIMM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM1_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM1_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM1_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_AXIMM2_ID_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ADDR_WIDTH = 64;
parameter    C_M_AXI_AXIMM2_DATA_WIDTH = 512;
parameter    C_M_AXI_AXIMM2_AWUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_ARUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_WUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_RUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_BUSER_WIDTH = 1;
parameter    C_M_AXI_AXIMM2_USER_VALUE = 0;
parameter    C_M_AXI_AXIMM2_PROT_VALUE = 0;
parameter    C_M_AXI_AXIMM2_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM1_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_AXIMM2_WSTRB_WIDTH = (512 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   event_done;
output   interrupt;
output   event_start;
output   m_axi_aximm1_AWVALID;
input   m_axi_aximm1_AWREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_AWADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_AWID;
output  [7:0] m_axi_aximm1_AWLEN;
output  [2:0] m_axi_aximm1_AWSIZE;
output  [1:0] m_axi_aximm1_AWBURST;
output  [1:0] m_axi_aximm1_AWLOCK;
output  [3:0] m_axi_aximm1_AWCACHE;
output  [2:0] m_axi_aximm1_AWPROT;
output  [3:0] m_axi_aximm1_AWQOS;
output  [3:0] m_axi_aximm1_AWREGION;
output  [C_M_AXI_AXIMM1_AWUSER_WIDTH - 1:0] m_axi_aximm1_AWUSER;
output   m_axi_aximm1_WVALID;
input   m_axi_aximm1_WREADY;
output  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_WDATA;
output  [C_M_AXI_AXIMM1_WSTRB_WIDTH - 1:0] m_axi_aximm1_WSTRB;
output   m_axi_aximm1_WLAST;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_WID;
output  [C_M_AXI_AXIMM1_WUSER_WIDTH - 1:0] m_axi_aximm1_WUSER;
output   m_axi_aximm1_ARVALID;
input   m_axi_aximm1_ARREADY;
output  [C_M_AXI_AXIMM1_ADDR_WIDTH - 1:0] m_axi_aximm1_ARADDR;
output  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_ARID;
output  [7:0] m_axi_aximm1_ARLEN;
output  [2:0] m_axi_aximm1_ARSIZE;
output  [1:0] m_axi_aximm1_ARBURST;
output  [1:0] m_axi_aximm1_ARLOCK;
output  [3:0] m_axi_aximm1_ARCACHE;
output  [2:0] m_axi_aximm1_ARPROT;
output  [3:0] m_axi_aximm1_ARQOS;
output  [3:0] m_axi_aximm1_ARREGION;
output  [C_M_AXI_AXIMM1_ARUSER_WIDTH - 1:0] m_axi_aximm1_ARUSER;
input   m_axi_aximm1_RVALID;
output   m_axi_aximm1_RREADY;
input  [C_M_AXI_AXIMM1_DATA_WIDTH - 1:0] m_axi_aximm1_RDATA;
input   m_axi_aximm1_RLAST;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_RID;
input  [C_M_AXI_AXIMM1_RUSER_WIDTH - 1:0] m_axi_aximm1_RUSER;
input  [1:0] m_axi_aximm1_RRESP;
input   m_axi_aximm1_BVALID;
output   m_axi_aximm1_BREADY;
input  [1:0] m_axi_aximm1_BRESP;
input  [C_M_AXI_AXIMM1_ID_WIDTH - 1:0] m_axi_aximm1_BID;
input  [C_M_AXI_AXIMM1_BUSER_WIDTH - 1:0] m_axi_aximm1_BUSER;
output   m_axi_aximm2_AWVALID;
input   m_axi_aximm2_AWREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_AWADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_AWID;
output  [7:0] m_axi_aximm2_AWLEN;
output  [2:0] m_axi_aximm2_AWSIZE;
output  [1:0] m_axi_aximm2_AWBURST;
output  [1:0] m_axi_aximm2_AWLOCK;
output  [3:0] m_axi_aximm2_AWCACHE;
output  [2:0] m_axi_aximm2_AWPROT;
output  [3:0] m_axi_aximm2_AWQOS;
output  [3:0] m_axi_aximm2_AWREGION;
output  [C_M_AXI_AXIMM2_AWUSER_WIDTH - 1:0] m_axi_aximm2_AWUSER;
output   m_axi_aximm2_WVALID;
input   m_axi_aximm2_WREADY;
output  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_WDATA;
output  [C_M_AXI_AXIMM2_WSTRB_WIDTH - 1:0] m_axi_aximm2_WSTRB;
output   m_axi_aximm2_WLAST;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_WID;
output  [C_M_AXI_AXIMM2_WUSER_WIDTH - 1:0] m_axi_aximm2_WUSER;
output   m_axi_aximm2_ARVALID;
input   m_axi_aximm2_ARREADY;
output  [C_M_AXI_AXIMM2_ADDR_WIDTH - 1:0] m_axi_aximm2_ARADDR;
output  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_ARID;
output  [7:0] m_axi_aximm2_ARLEN;
output  [2:0] m_axi_aximm2_ARSIZE;
output  [1:0] m_axi_aximm2_ARBURST;
output  [1:0] m_axi_aximm2_ARLOCK;
output  [3:0] m_axi_aximm2_ARCACHE;
output  [2:0] m_axi_aximm2_ARPROT;
output  [3:0] m_axi_aximm2_ARQOS;
output  [3:0] m_axi_aximm2_ARREGION;
output  [C_M_AXI_AXIMM2_ARUSER_WIDTH - 1:0] m_axi_aximm2_ARUSER;
input   m_axi_aximm2_RVALID;
output   m_axi_aximm2_RREADY;
input  [C_M_AXI_AXIMM2_DATA_WIDTH - 1:0] m_axi_aximm2_RDATA;
input   m_axi_aximm2_RLAST;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_RID;
input  [C_M_AXI_AXIMM2_RUSER_WIDTH - 1:0] m_axi_aximm2_RUSER;
input  [1:0] m_axi_aximm2_RRESP;
input   m_axi_aximm2_BVALID;
output   m_axi_aximm2_BREADY;
input  [1:0] m_axi_aximm2_BRESP;
input  [C_M_AXI_AXIMM2_ID_WIDTH - 1:0] m_axi_aximm2_BID;
input  [C_M_AXI_AXIMM2_BUSER_WIDTH - 1:0] m_axi_aximm2_BUSER;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire   [63:0] input1;
wire   [63:0] input2;
wire   [63:0] output1;
wire   [63:0] output2;
wire   [31:0] config_size;
wire   [31:0] input_size;
wire   [31:0] output_size;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_continue;
wire    ap_idle;
wire    aximm1_AWREADY;
wire    aximm1_WREADY;
wire    aximm1_ARREADY;
wire    aximm1_RVALID;
wire   [63:0] aximm1_RDATA;
wire    aximm1_RLAST;
wire   [0:0] aximm1_RID;
wire   [0:0] aximm1_RUSER;
wire   [1:0] aximm1_RRESP;
wire    aximm1_BVALID;
wire   [1:0] aximm1_BRESP;
wire   [0:0] aximm1_BID;
wire   [0:0] aximm1_BUSER;
wire    aximm2_AWREADY;
wire    aximm2_WREADY;
wire    aximm2_ARREADY;
wire    aximm2_RVALID;
wire   [511:0] aximm2_RDATA;
wire    aximm2_RLAST;
wire   [0:0] aximm2_RID;
wire   [0:0] aximm2_RUSER;
wire   [1:0] aximm2_RRESP;
wire    aximm2_BVALID;
wire   [1:0] aximm2_BRESP;
wire   [0:0] aximm2_BID;
wire   [0:0] aximm2_BUSER;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire   [63:0] entry_proc_U0_ap_return_0;
wire   [63:0] entry_proc_U0_ap_return_1;
wire   [31:0] entry_proc_U0_ap_return_2;
wire    entry_proc_U0_ap_ext_blocking_n;
wire    entry_proc_U0_ap_str_blocking_n;
wire    entry_proc_U0_ap_int_blocking_n;
wire    ap_channel_done_output_size_c_channel;
wire    output_size_c_channel_full_n;
reg    ap_sync_reg_channel_write_output_size_c_channel;
wire    ap_sync_channel_write_output_size_c_channel;
wire    ap_channel_done_output2_c_channel;
wire    output2_c_channel_full_n;
reg    ap_sync_reg_channel_write_output2_c_channel;
wire    ap_sync_channel_write_output2_c_channel;
wire    ap_channel_done_output1_c_channel;
wire    output1_c_channel_full_n;
reg    ap_sync_reg_channel_write_output1_c_channel;
wire    ap_sync_channel_write_output1_c_channel;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_start;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_done;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_continue;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_idle;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWVALID;
wire   [63:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWADDR;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWID;
wire   [31:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWLEN;
wire   [2:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWSIZE;
wire   [1:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWBURST;
wire   [1:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWLOCK;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWCACHE;
wire   [2:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWPROT;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWQOS;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWREGION;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWUSER;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WVALID;
wire   [63:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WDATA;
wire   [7:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WSTRB;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WLAST;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WID;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WUSER;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARVALID;
wire   [63:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARADDR;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARID;
wire   [31:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLEN;
wire   [2:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARSIZE;
wire   [1:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARBURST;
wire   [1:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLOCK;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARCACHE;
wire   [2:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARPROT;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARQOS;
wire   [3:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARREGION;
wire   [0:0] Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARUSER;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_RREADY;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_BREADY;
wire   [63:0] Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_din;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_write;
wire   [31:0] Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_din;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_write;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_ext_blocking_n;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_str_blocking_n;
wire    Loop_VITIS_LOOP_31_1_proc1_U0_ap_int_blocking_n;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_start;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_done;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_continue;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_idle;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_ready;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_config_size_read;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_v1_buffer_V_read;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWVALID;
wire   [63:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWADDR;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWID;
wire   [31:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLEN;
wire   [2:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWSIZE;
wire   [1:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWBURST;
wire   [1:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLOCK;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWCACHE;
wire   [2:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWPROT;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWQOS;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWREGION;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWUSER;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WVALID;
wire   [63:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WDATA;
wire   [7:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WSTRB;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WLAST;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WID;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WUSER;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARVALID;
wire   [63:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARADDR;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARID;
wire   [31:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARLEN;
wire   [2:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARSIZE;
wire   [1:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARBURST;
wire   [1:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARLOCK;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARCACHE;
wire   [2:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARPROT;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARQOS;
wire   [3:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARREGION;
wire   [0:0] Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARUSER;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_RREADY;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_BREADY;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_ext_blocking_n;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_str_blocking_n;
wire    Loop_VITIS_LOOP_32_2_proc2_U0_ap_int_blocking_n;
wire    ap_sync_continue;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_start;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_done;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_continue;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_idle;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWVALID;
wire   [63:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWADDR;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWID;
wire   [31:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWLEN;
wire   [2:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWSIZE;
wire   [1:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWBURST;
wire   [1:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWLOCK;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWCACHE;
wire   [2:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWPROT;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWQOS;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWREGION;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWUSER;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WVALID;
wire   [511:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WDATA;
wire   [63:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WSTRB;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WLAST;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WID;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WUSER;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARVALID;
wire   [63:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARADDR;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARID;
wire   [31:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLEN;
wire   [2:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARSIZE;
wire   [1:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARBURST;
wire   [1:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLOCK;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARCACHE;
wire   [2:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARPROT;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARQOS;
wire   [3:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARREGION;
wire   [0:0] Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARUSER;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_RREADY;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_BREADY;
wire   [511:0] Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_din;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_write;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_ext_blocking_n;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_str_blocking_n;
wire    Loop_VITIS_LOOP_35_3_proc3_U0_ap_int_blocking_n;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_start;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_done;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_continue;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_idle;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_ready;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_v2_buffer_V_read;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWVALID;
wire   [63:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWADDR;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWID;
wire   [31:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLEN;
wire   [2:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWSIZE;
wire   [1:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWBURST;
wire   [1:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLOCK;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWCACHE;
wire   [2:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWPROT;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWQOS;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWREGION;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWUSER;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WVALID;
wire   [511:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WDATA;
wire   [63:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WSTRB;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WLAST;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WID;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WUSER;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARVALID;
wire   [63:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARADDR;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARID;
wire   [31:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARLEN;
wire   [2:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARSIZE;
wire   [1:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARBURST;
wire   [1:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARLOCK;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARCACHE;
wire   [2:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARPROT;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARQOS;
wire   [3:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARREGION;
wire   [0:0] Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARUSER;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_RREADY;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_BREADY;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_ext_blocking_n;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_str_blocking_n;
wire    Loop_VITIS_LOOP_36_4_proc4_U0_ap_int_blocking_n;
wire   [63:0] output1_c_channel_dout;
wire    output1_c_channel_empty_n;
wire   [63:0] output2_c_channel_dout;
wire    output2_c_channel_empty_n;
wire   [31:0] output_size_c_channel_dout;
wire    output_size_c_channel_empty_n;
wire    v1_buffer_V_full_n;
wire   [63:0] v1_buffer_V_dout;
wire    v1_buffer_V_empty_n;
wire    config_size_c_full_n;
wire   [31:0] config_size_c_dout;
wire    config_size_c_empty_n;
wire    v2_buffer_V_full_n;
wire   [511:0] v2_buffer_V_dout;
wire    v2_buffer_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready;
wire    ap_sync_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready;
reg    ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready;
wire    ap_sync_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready;
wire    ap_ext_blocking_cur_n;
wire    ap_str_blocking_cur_n;
wire    ap_int_blocking_cur_n;
wire    ap_ext_blocking_sub_n;
wire    ap_str_blocking_sub_n;
wire    ap_int_blocking_sub_n;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_sync_reg_channel_write_output_size_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_output2_c_channel = 1'b0;
#0 ap_sync_reg_channel_write_output1_c_channel = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready = 1'b0;
end

ydma_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .input1(input1),
    .input2(input2),
    .output1(output1),
    .output2(output2),
    .config_size(config_size),
    .input_size(input_size),
    .output_size(output_size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

ydma_aximm1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 64 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM1_CACHE_VALUE ))
aximm1_m_axi_U(
    .AWVALID(m_axi_aximm1_AWVALID),
    .AWREADY(m_axi_aximm1_AWREADY),
    .AWADDR(m_axi_aximm1_AWADDR),
    .AWID(m_axi_aximm1_AWID),
    .AWLEN(m_axi_aximm1_AWLEN),
    .AWSIZE(m_axi_aximm1_AWSIZE),
    .AWBURST(m_axi_aximm1_AWBURST),
    .AWLOCK(m_axi_aximm1_AWLOCK),
    .AWCACHE(m_axi_aximm1_AWCACHE),
    .AWPROT(m_axi_aximm1_AWPROT),
    .AWQOS(m_axi_aximm1_AWQOS),
    .AWREGION(m_axi_aximm1_AWREGION),
    .AWUSER(m_axi_aximm1_AWUSER),
    .WVALID(m_axi_aximm1_WVALID),
    .WREADY(m_axi_aximm1_WREADY),
    .WDATA(m_axi_aximm1_WDATA),
    .WSTRB(m_axi_aximm1_WSTRB),
    .WLAST(m_axi_aximm1_WLAST),
    .WID(m_axi_aximm1_WID),
    .WUSER(m_axi_aximm1_WUSER),
    .ARVALID(m_axi_aximm1_ARVALID),
    .ARREADY(m_axi_aximm1_ARREADY),
    .ARADDR(m_axi_aximm1_ARADDR),
    .ARID(m_axi_aximm1_ARID),
    .ARLEN(m_axi_aximm1_ARLEN),
    .ARSIZE(m_axi_aximm1_ARSIZE),
    .ARBURST(m_axi_aximm1_ARBURST),
    .ARLOCK(m_axi_aximm1_ARLOCK),
    .ARCACHE(m_axi_aximm1_ARCACHE),
    .ARPROT(m_axi_aximm1_ARPROT),
    .ARQOS(m_axi_aximm1_ARQOS),
    .ARREGION(m_axi_aximm1_ARREGION),
    .ARUSER(m_axi_aximm1_ARUSER),
    .RVALID(m_axi_aximm1_RVALID),
    .RREADY(m_axi_aximm1_RREADY),
    .RDATA(m_axi_aximm1_RDATA),
    .RLAST(m_axi_aximm1_RLAST),
    .RID(m_axi_aximm1_RID),
    .RUSER(m_axi_aximm1_RUSER),
    .RRESP(m_axi_aximm1_RRESP),
    .BVALID(m_axi_aximm1_BVALID),
    .BREADY(m_axi_aximm1_BREADY),
    .BRESP(m_axi_aximm1_BRESP),
    .BID(m_axi_aximm1_BID),
    .BUSER(m_axi_aximm1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARVALID),
    .I_ARREADY(aximm1_ARREADY),
    .I_ARADDR(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARADDR),
    .I_ARID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARID),
    .I_ARLEN(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLEN),
    .I_ARSIZE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARSIZE),
    .I_ARLOCK(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLOCK),
    .I_ARCACHE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARCACHE),
    .I_ARQOS(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARQOS),
    .I_ARPROT(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARPROT),
    .I_ARUSER(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARUSER),
    .I_ARBURST(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARBURST),
    .I_ARREGION(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARREGION),
    .I_RVALID(aximm1_RVALID),
    .I_RREADY(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_RREADY),
    .I_RDATA(aximm1_RDATA),
    .I_RID(aximm1_RID),
    .I_RUSER(aximm1_RUSER),
    .I_RRESP(aximm1_RRESP),
    .I_RLAST(aximm1_RLAST),
    .I_AWVALID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWVALID),
    .I_AWREADY(aximm1_AWREADY),
    .I_AWADDR(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWADDR),
    .I_AWID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWID),
    .I_AWLEN(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLEN),
    .I_AWSIZE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWSIZE),
    .I_AWLOCK(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLOCK),
    .I_AWCACHE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWCACHE),
    .I_AWQOS(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWQOS),
    .I_AWPROT(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWPROT),
    .I_AWUSER(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWUSER),
    .I_AWBURST(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWBURST),
    .I_AWREGION(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWREGION),
    .I_WVALID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WVALID),
    .I_WREADY(aximm1_WREADY),
    .I_WDATA(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WDATA),
    .I_WID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WID),
    .I_WUSER(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WUSER),
    .I_WLAST(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WLAST),
    .I_WSTRB(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WSTRB),
    .I_BVALID(aximm1_BVALID),
    .I_BREADY(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_BREADY),
    .I_BRESP(aximm1_BRESP),
    .I_BID(aximm1_BID),
    .I_BUSER(aximm1_BUSER)
);

ydma_aximm2_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 512 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_AXIMM2_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_AXIMM2_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_AXIMM2_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_AXIMM2_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_AXIMM2_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_AXIMM2_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_AXIMM2_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_AXIMM2_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_AXIMM2_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_AXIMM2_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_AXIMM2_CACHE_VALUE ))
aximm2_m_axi_U(
    .AWVALID(m_axi_aximm2_AWVALID),
    .AWREADY(m_axi_aximm2_AWREADY),
    .AWADDR(m_axi_aximm2_AWADDR),
    .AWID(m_axi_aximm2_AWID),
    .AWLEN(m_axi_aximm2_AWLEN),
    .AWSIZE(m_axi_aximm2_AWSIZE),
    .AWBURST(m_axi_aximm2_AWBURST),
    .AWLOCK(m_axi_aximm2_AWLOCK),
    .AWCACHE(m_axi_aximm2_AWCACHE),
    .AWPROT(m_axi_aximm2_AWPROT),
    .AWQOS(m_axi_aximm2_AWQOS),
    .AWREGION(m_axi_aximm2_AWREGION),
    .AWUSER(m_axi_aximm2_AWUSER),
    .WVALID(m_axi_aximm2_WVALID),
    .WREADY(m_axi_aximm2_WREADY),
    .WDATA(m_axi_aximm2_WDATA),
    .WSTRB(m_axi_aximm2_WSTRB),
    .WLAST(m_axi_aximm2_WLAST),
    .WID(m_axi_aximm2_WID),
    .WUSER(m_axi_aximm2_WUSER),
    .ARVALID(m_axi_aximm2_ARVALID),
    .ARREADY(m_axi_aximm2_ARREADY),
    .ARADDR(m_axi_aximm2_ARADDR),
    .ARID(m_axi_aximm2_ARID),
    .ARLEN(m_axi_aximm2_ARLEN),
    .ARSIZE(m_axi_aximm2_ARSIZE),
    .ARBURST(m_axi_aximm2_ARBURST),
    .ARLOCK(m_axi_aximm2_ARLOCK),
    .ARCACHE(m_axi_aximm2_ARCACHE),
    .ARPROT(m_axi_aximm2_ARPROT),
    .ARQOS(m_axi_aximm2_ARQOS),
    .ARREGION(m_axi_aximm2_ARREGION),
    .ARUSER(m_axi_aximm2_ARUSER),
    .RVALID(m_axi_aximm2_RVALID),
    .RREADY(m_axi_aximm2_RREADY),
    .RDATA(m_axi_aximm2_RDATA),
    .RLAST(m_axi_aximm2_RLAST),
    .RID(m_axi_aximm2_RID),
    .RUSER(m_axi_aximm2_RUSER),
    .RRESP(m_axi_aximm2_RRESP),
    .BVALID(m_axi_aximm2_BVALID),
    .BREADY(m_axi_aximm2_BREADY),
    .BRESP(m_axi_aximm2_BRESP),
    .BID(m_axi_aximm2_BID),
    .BUSER(m_axi_aximm2_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARVALID),
    .I_ARREADY(aximm2_ARREADY),
    .I_ARADDR(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARADDR),
    .I_ARID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARID),
    .I_ARLEN(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLEN),
    .I_ARSIZE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARSIZE),
    .I_ARLOCK(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLOCK),
    .I_ARCACHE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARCACHE),
    .I_ARQOS(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARQOS),
    .I_ARPROT(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARPROT),
    .I_ARUSER(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARUSER),
    .I_ARBURST(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARBURST),
    .I_ARREGION(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARREGION),
    .I_RVALID(aximm2_RVALID),
    .I_RREADY(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_RREADY),
    .I_RDATA(aximm2_RDATA),
    .I_RID(aximm2_RID),
    .I_RUSER(aximm2_RUSER),
    .I_RRESP(aximm2_RRESP),
    .I_RLAST(aximm2_RLAST),
    .I_AWVALID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWVALID),
    .I_AWREADY(aximm2_AWREADY),
    .I_AWADDR(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWADDR),
    .I_AWID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWID),
    .I_AWLEN(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLEN),
    .I_AWSIZE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWSIZE),
    .I_AWLOCK(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLOCK),
    .I_AWCACHE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWCACHE),
    .I_AWQOS(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWQOS),
    .I_AWPROT(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWPROT),
    .I_AWUSER(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWUSER),
    .I_AWBURST(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWBURST),
    .I_AWREGION(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWREGION),
    .I_WVALID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WVALID),
    .I_WREADY(aximm2_WREADY),
    .I_WDATA(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WDATA),
    .I_WID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WID),
    .I_WUSER(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WUSER),
    .I_WLAST(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WLAST),
    .I_WSTRB(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WSTRB),
    .I_BVALID(aximm2_BVALID),
    .I_BREADY(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_BREADY),
    .I_BRESP(aximm2_BRESP),
    .I_BID(aximm2_BID),
    .I_BUSER(aximm2_BUSER)
);

ydma_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .output1(output1),
    .output2(output2),
    .output_size(output_size),
    .ap_return_0(entry_proc_U0_ap_return_0),
    .ap_return_1(entry_proc_U0_ap_return_1),
    .ap_return_2(entry_proc_U0_ap_return_2),
    .ap_ext_blocking_n(entry_proc_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(entry_proc_U0_ap_str_blocking_n),
    .ap_int_blocking_n(entry_proc_U0_ap_int_blocking_n)
);

ydma_Loop_VITIS_LOOP_31_1_proc1 Loop_VITIS_LOOP_31_1_proc1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_31_1_proc1_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_31_1_proc1_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_31_1_proc1_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_31_1_proc1_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready),
    .config_size(config_size),
    .input1(input1),
    .m_axi_aximm1_AWVALID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWVALID),
    .m_axi_aximm1_AWREADY(1'b0),
    .m_axi_aximm1_AWADDR(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWADDR),
    .m_axi_aximm1_AWID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWID),
    .m_axi_aximm1_AWLEN(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWLEN),
    .m_axi_aximm1_AWSIZE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWSIZE),
    .m_axi_aximm1_AWBURST(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWBURST),
    .m_axi_aximm1_AWLOCK(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWLOCK),
    .m_axi_aximm1_AWCACHE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWCACHE),
    .m_axi_aximm1_AWPROT(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWPROT),
    .m_axi_aximm1_AWQOS(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWQOS),
    .m_axi_aximm1_AWREGION(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWREGION),
    .m_axi_aximm1_AWUSER(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_AWUSER),
    .m_axi_aximm1_WVALID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WVALID),
    .m_axi_aximm1_WREADY(1'b0),
    .m_axi_aximm1_WDATA(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WDATA),
    .m_axi_aximm1_WSTRB(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WSTRB),
    .m_axi_aximm1_WLAST(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WLAST),
    .m_axi_aximm1_WID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WID),
    .m_axi_aximm1_WUSER(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_WUSER),
    .m_axi_aximm1_ARVALID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARVALID),
    .m_axi_aximm1_ARREADY(aximm1_ARREADY),
    .m_axi_aximm1_ARADDR(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARADDR),
    .m_axi_aximm1_ARID(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARID),
    .m_axi_aximm1_ARLEN(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLEN),
    .m_axi_aximm1_ARSIZE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARSIZE),
    .m_axi_aximm1_ARBURST(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARBURST),
    .m_axi_aximm1_ARLOCK(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARLOCK),
    .m_axi_aximm1_ARCACHE(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARCACHE),
    .m_axi_aximm1_ARPROT(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARPROT),
    .m_axi_aximm1_ARQOS(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARQOS),
    .m_axi_aximm1_ARREGION(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARREGION),
    .m_axi_aximm1_ARUSER(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_ARUSER),
    .m_axi_aximm1_RVALID(aximm1_RVALID),
    .m_axi_aximm1_RREADY(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_RREADY),
    .m_axi_aximm1_RDATA(aximm1_RDATA),
    .m_axi_aximm1_RLAST(aximm1_RLAST),
    .m_axi_aximm1_RID(aximm1_RID),
    .m_axi_aximm1_RUSER(aximm1_RUSER),
    .m_axi_aximm1_RRESP(aximm1_RRESP),
    .m_axi_aximm1_BVALID(1'b0),
    .m_axi_aximm1_BREADY(Loop_VITIS_LOOP_31_1_proc1_U0_m_axi_aximm1_BREADY),
    .m_axi_aximm1_BRESP(2'd0),
    .m_axi_aximm1_BID(1'd0),
    .m_axi_aximm1_BUSER(1'd0),
    .v1_buffer_V_din(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_din),
    .v1_buffer_V_full_n(v1_buffer_V_full_n),
    .v1_buffer_V_write(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_write),
    .config_size_c_din(Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_din),
    .config_size_c_full_n(config_size_c_full_n),
    .config_size_c_write(Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_write),
    .ap_ext_blocking_n(Loop_VITIS_LOOP_31_1_proc1_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(Loop_VITIS_LOOP_31_1_proc1_U0_ap_str_blocking_n),
    .ap_int_blocking_n(Loop_VITIS_LOOP_31_1_proc1_U0_ap_int_blocking_n)
);

ydma_Loop_VITIS_LOOP_32_2_proc2 Loop_VITIS_LOOP_32_2_proc2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_32_2_proc2_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_32_2_proc2_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_32_2_proc2_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_32_2_proc2_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_32_2_proc2_U0_ap_ready),
    .config_size_dout(config_size_c_dout),
    .config_size_empty_n(config_size_c_empty_n),
    .config_size_read(Loop_VITIS_LOOP_32_2_proc2_U0_config_size_read),
    .v1_buffer_V_dout(v1_buffer_V_dout),
    .v1_buffer_V_empty_n(v1_buffer_V_empty_n),
    .v1_buffer_V_read(Loop_VITIS_LOOP_32_2_proc2_U0_v1_buffer_V_read),
    .p_read(output1_c_channel_dout),
    .m_axi_aximm1_AWVALID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWVALID),
    .m_axi_aximm1_AWREADY(aximm1_AWREADY),
    .m_axi_aximm1_AWADDR(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWADDR),
    .m_axi_aximm1_AWID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWID),
    .m_axi_aximm1_AWLEN(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLEN),
    .m_axi_aximm1_AWSIZE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWSIZE),
    .m_axi_aximm1_AWBURST(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWBURST),
    .m_axi_aximm1_AWLOCK(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWLOCK),
    .m_axi_aximm1_AWCACHE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWCACHE),
    .m_axi_aximm1_AWPROT(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWPROT),
    .m_axi_aximm1_AWQOS(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWQOS),
    .m_axi_aximm1_AWREGION(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWREGION),
    .m_axi_aximm1_AWUSER(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_AWUSER),
    .m_axi_aximm1_WVALID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WVALID),
    .m_axi_aximm1_WREADY(aximm1_WREADY),
    .m_axi_aximm1_WDATA(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WDATA),
    .m_axi_aximm1_WSTRB(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WSTRB),
    .m_axi_aximm1_WLAST(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WLAST),
    .m_axi_aximm1_WID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WID),
    .m_axi_aximm1_WUSER(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_WUSER),
    .m_axi_aximm1_ARVALID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARVALID),
    .m_axi_aximm1_ARREADY(1'b0),
    .m_axi_aximm1_ARADDR(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARADDR),
    .m_axi_aximm1_ARID(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARID),
    .m_axi_aximm1_ARLEN(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARLEN),
    .m_axi_aximm1_ARSIZE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARSIZE),
    .m_axi_aximm1_ARBURST(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARBURST),
    .m_axi_aximm1_ARLOCK(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARLOCK),
    .m_axi_aximm1_ARCACHE(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARCACHE),
    .m_axi_aximm1_ARPROT(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARPROT),
    .m_axi_aximm1_ARQOS(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARQOS),
    .m_axi_aximm1_ARREGION(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARREGION),
    .m_axi_aximm1_ARUSER(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_ARUSER),
    .m_axi_aximm1_RVALID(1'b0),
    .m_axi_aximm1_RREADY(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_RREADY),
    .m_axi_aximm1_RDATA(64'd0),
    .m_axi_aximm1_RLAST(1'b0),
    .m_axi_aximm1_RID(1'd0),
    .m_axi_aximm1_RUSER(1'd0),
    .m_axi_aximm1_RRESP(2'd0),
    .m_axi_aximm1_BVALID(aximm1_BVALID),
    .m_axi_aximm1_BREADY(Loop_VITIS_LOOP_32_2_proc2_U0_m_axi_aximm1_BREADY),
    .m_axi_aximm1_BRESP(aximm1_BRESP),
    .m_axi_aximm1_BID(aximm1_BID),
    .m_axi_aximm1_BUSER(aximm1_BUSER),
    .ap_ext_blocking_n(Loop_VITIS_LOOP_32_2_proc2_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(Loop_VITIS_LOOP_32_2_proc2_U0_ap_str_blocking_n),
    .ap_int_blocking_n(Loop_VITIS_LOOP_32_2_proc2_U0_ap_int_blocking_n)
);

ydma_Loop_VITIS_LOOP_35_3_proc3 Loop_VITIS_LOOP_35_3_proc3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_35_3_proc3_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_35_3_proc3_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_35_3_proc3_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_35_3_proc3_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready),
    .input_size(input_size),
    .input2(input2),
    .m_axi_aximm2_AWVALID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWVALID),
    .m_axi_aximm2_AWREADY(1'b0),
    .m_axi_aximm2_AWADDR(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWADDR),
    .m_axi_aximm2_AWID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWID),
    .m_axi_aximm2_AWLEN(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWLEN),
    .m_axi_aximm2_AWSIZE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWSIZE),
    .m_axi_aximm2_AWBURST(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWBURST),
    .m_axi_aximm2_AWLOCK(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWLOCK),
    .m_axi_aximm2_AWCACHE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWCACHE),
    .m_axi_aximm2_AWPROT(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWPROT),
    .m_axi_aximm2_AWQOS(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWQOS),
    .m_axi_aximm2_AWREGION(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWREGION),
    .m_axi_aximm2_AWUSER(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_AWUSER),
    .m_axi_aximm2_WVALID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WVALID),
    .m_axi_aximm2_WREADY(1'b0),
    .m_axi_aximm2_WDATA(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WDATA),
    .m_axi_aximm2_WSTRB(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WSTRB),
    .m_axi_aximm2_WLAST(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WLAST),
    .m_axi_aximm2_WID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WID),
    .m_axi_aximm2_WUSER(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_WUSER),
    .m_axi_aximm2_ARVALID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARVALID),
    .m_axi_aximm2_ARREADY(aximm2_ARREADY),
    .m_axi_aximm2_ARADDR(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARADDR),
    .m_axi_aximm2_ARID(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARID),
    .m_axi_aximm2_ARLEN(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLEN),
    .m_axi_aximm2_ARSIZE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARSIZE),
    .m_axi_aximm2_ARBURST(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARBURST),
    .m_axi_aximm2_ARLOCK(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARLOCK),
    .m_axi_aximm2_ARCACHE(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARCACHE),
    .m_axi_aximm2_ARPROT(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARPROT),
    .m_axi_aximm2_ARQOS(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARQOS),
    .m_axi_aximm2_ARREGION(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARREGION),
    .m_axi_aximm2_ARUSER(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_ARUSER),
    .m_axi_aximm2_RVALID(aximm2_RVALID),
    .m_axi_aximm2_RREADY(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_RREADY),
    .m_axi_aximm2_RDATA(aximm2_RDATA),
    .m_axi_aximm2_RLAST(aximm2_RLAST),
    .m_axi_aximm2_RID(aximm2_RID),
    .m_axi_aximm2_RUSER(aximm2_RUSER),
    .m_axi_aximm2_RRESP(aximm2_RRESP),
    .m_axi_aximm2_BVALID(1'b0),
    .m_axi_aximm2_BREADY(Loop_VITIS_LOOP_35_3_proc3_U0_m_axi_aximm2_BREADY),
    .m_axi_aximm2_BRESP(2'd0),
    .m_axi_aximm2_BID(1'd0),
    .m_axi_aximm2_BUSER(1'd0),
    .v2_buffer_V_din(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_din),
    .v2_buffer_V_full_n(v2_buffer_V_full_n),
    .v2_buffer_V_write(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_write),
    .ap_ext_blocking_n(Loop_VITIS_LOOP_35_3_proc3_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(Loop_VITIS_LOOP_35_3_proc3_U0_ap_str_blocking_n),
    .ap_int_blocking_n(Loop_VITIS_LOOP_35_3_proc3_U0_ap_int_blocking_n)
);

ydma_Loop_VITIS_LOOP_36_4_proc4 Loop_VITIS_LOOP_36_4_proc4_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Loop_VITIS_LOOP_36_4_proc4_U0_ap_start),
    .ap_done(Loop_VITIS_LOOP_36_4_proc4_U0_ap_done),
    .ap_continue(Loop_VITIS_LOOP_36_4_proc4_U0_ap_continue),
    .ap_idle(Loop_VITIS_LOOP_36_4_proc4_U0_ap_idle),
    .ap_ready(Loop_VITIS_LOOP_36_4_proc4_U0_ap_ready),
    .p_read(output_size_c_channel_dout),
    .v2_buffer_V_dout(v2_buffer_V_dout),
    .v2_buffer_V_empty_n(v2_buffer_V_empty_n),
    .v2_buffer_V_read(Loop_VITIS_LOOP_36_4_proc4_U0_v2_buffer_V_read),
    .p_read1(output2_c_channel_dout),
    .m_axi_aximm2_AWVALID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWVALID),
    .m_axi_aximm2_AWREADY(aximm2_AWREADY),
    .m_axi_aximm2_AWADDR(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWADDR),
    .m_axi_aximm2_AWID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWID),
    .m_axi_aximm2_AWLEN(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLEN),
    .m_axi_aximm2_AWSIZE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWSIZE),
    .m_axi_aximm2_AWBURST(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWBURST),
    .m_axi_aximm2_AWLOCK(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWLOCK),
    .m_axi_aximm2_AWCACHE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWCACHE),
    .m_axi_aximm2_AWPROT(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWPROT),
    .m_axi_aximm2_AWQOS(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWQOS),
    .m_axi_aximm2_AWREGION(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWREGION),
    .m_axi_aximm2_AWUSER(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_AWUSER),
    .m_axi_aximm2_WVALID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WVALID),
    .m_axi_aximm2_WREADY(aximm2_WREADY),
    .m_axi_aximm2_WDATA(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WDATA),
    .m_axi_aximm2_WSTRB(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WSTRB),
    .m_axi_aximm2_WLAST(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WLAST),
    .m_axi_aximm2_WID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WID),
    .m_axi_aximm2_WUSER(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_WUSER),
    .m_axi_aximm2_ARVALID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARVALID),
    .m_axi_aximm2_ARREADY(1'b0),
    .m_axi_aximm2_ARADDR(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARADDR),
    .m_axi_aximm2_ARID(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARID),
    .m_axi_aximm2_ARLEN(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARLEN),
    .m_axi_aximm2_ARSIZE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARSIZE),
    .m_axi_aximm2_ARBURST(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARBURST),
    .m_axi_aximm2_ARLOCK(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARLOCK),
    .m_axi_aximm2_ARCACHE(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARCACHE),
    .m_axi_aximm2_ARPROT(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARPROT),
    .m_axi_aximm2_ARQOS(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARQOS),
    .m_axi_aximm2_ARREGION(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARREGION),
    .m_axi_aximm2_ARUSER(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_ARUSER),
    .m_axi_aximm2_RVALID(1'b0),
    .m_axi_aximm2_RREADY(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_RREADY),
    .m_axi_aximm2_RDATA(512'd0),
    .m_axi_aximm2_RLAST(1'b0),
    .m_axi_aximm2_RID(1'd0),
    .m_axi_aximm2_RUSER(1'd0),
    .m_axi_aximm2_RRESP(2'd0),
    .m_axi_aximm2_BVALID(aximm2_BVALID),
    .m_axi_aximm2_BREADY(Loop_VITIS_LOOP_36_4_proc4_U0_m_axi_aximm2_BREADY),
    .m_axi_aximm2_BRESP(aximm2_BRESP),
    .m_axi_aximm2_BID(aximm2_BID),
    .m_axi_aximm2_BUSER(aximm2_BUSER),
    .ap_ext_blocking_n(Loop_VITIS_LOOP_36_4_proc4_U0_ap_ext_blocking_n),
    .ap_str_blocking_n(Loop_VITIS_LOOP_36_4_proc4_U0_ap_str_blocking_n),
    .ap_int_blocking_n(Loop_VITIS_LOOP_36_4_proc4_U0_ap_int_blocking_n)
);

ydma_fifo_w64_d2_S output1_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_0),
    .if_full_n(output1_c_channel_full_n),
    .if_write(ap_channel_done_output1_c_channel),
    .if_dout(output1_c_channel_dout),
    .if_empty_n(output1_c_channel_empty_n),
    .if_read(Loop_VITIS_LOOP_32_2_proc2_U0_ap_ready)
);

ydma_fifo_w64_d2_S output2_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_1),
    .if_full_n(output2_c_channel_full_n),
    .if_write(ap_channel_done_output2_c_channel),
    .if_dout(output2_c_channel_dout),
    .if_empty_n(output2_c_channel_empty_n),
    .if_read(Loop_VITIS_LOOP_36_4_proc4_U0_ap_ready)
);

ydma_fifo_w32_d2_S output_size_c_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_ap_return_2),
    .if_full_n(output_size_c_channel_full_n),
    .if_write(ap_channel_done_output_size_c_channel),
    .if_dout(output_size_c_channel_dout),
    .if_empty_n(output_size_c_channel_empty_n),
    .if_read(Loop_VITIS_LOOP_36_4_proc4_U0_ap_ready)
);



ydma_fifo_w32_d2_S config_size_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_din),
    .if_full_n(config_size_c_full_n),
    .if_write(Loop_VITIS_LOOP_31_1_proc1_U0_config_size_c_write),
    .if_dout(config_size_c_dout),
    .if_empty_n(config_size_c_empty_n),
    .if_read(Loop_VITIS_LOOP_32_2_proc2_U0_config_size_read)
);




/*
ydma_fifo_w512_d2014_A v2_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_din),
    .if_full_n(v2_buffer_V_full_n),
    .if_write(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_write),
    .if_dout(v2_buffer_V_dout),
    .if_empty_n(v2_buffer_V_empty_n),
    .if_read(Loop_VITIS_LOOP_36_4_proc4_U0_v2_buffer_V_read)
);




ydma_fifo_w64_d256_A v1_buffer_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_din),
    .if_full_n(v1_buffer_V_full_n),
    .if_write(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_write),
    .if_dout(v1_buffer_V_dout),
    .if_empty_n(v1_buffer_V_empty_n),
    .if_read(Loop_VITIS_LOOP_32_2_proc2_U0_v1_buffer_V_read)
);
*/



wire [48:0] dout_leaf_0;
wire [48:0] dout_leaf_1;
wire [48:0] dout_leaf_2;
wire [48:0] dout_leaf_3;
wire [48:0] dout_leaf_4;
wire [48:0] dout_leaf_5;
wire [48:0] dout_leaf_6;
wire [48:0] dout_leaf_7;

wire [48:0] din_leaf_0;
wire [48:0] din_leaf_1;
wire [48:0] din_leaf_2;
wire [48:0] din_leaf_3;
wire [48:0] din_leaf_4;
wire [48:0] din_leaf_5;
wire [48:0] din_leaf_6;
wire [48:0] din_leaf_7;

wire resend_0;
wire resend_1;
wire resend_2;
wire resend_3;
wire resend_4;
wire resend_5;
wire resend_6;
wire resend_7;

wire [31:0] tdata1;
wire        tvalid1;
wire        tready1;

wire [31:0] tdata2;
wire        tvalid2;
wire        tready2;

wire [63:0] tdata3;
wire        tvalid3;
wire        tready3;

config_parser config_parser_inst(
    .ap_clk(ap_clk),
    .ap_rst_n(ap_rst_n),
    .ap_start(1'b1),
    .ap_done(),
    .ap_idle(),
    .ap_ready(),
    .input1_V_TDATA(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_din),
    .input1_V_TVALID(Loop_VITIS_LOOP_31_1_proc1_U0_v1_buffer_V_write),
    .input1_V_TREADY(v1_buffer_V_full_n),
    .input2_V_TDATA(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_din),
    .input2_V_TVALID(Loop_VITIS_LOOP_35_3_proc3_U0_v2_buffer_V_write),
    .input2_V_TREADY(v2_buffer_V_full_n),
    .output1_V_TDATA(tdata3),
    .output1_V_TVALID(tvalid3),
    .output1_V_TREADY(~resend_0),
    .output2_V_TDATA(tdata1),
    .output2_V_TVALID(tvalid1),
    .output2_V_TREADY(tready1),
    .output3_V_TDATA(v1_buffer_V_dout),
    .output3_V_TVALID(v1_buffer_V_empty_n),
    .output3_V_TREADY(Loop_VITIS_LOOP_32_2_proc2_U0_v1_buffer_V_read)
);

data32to512 data32to512_inst(
    .ap_clk(ap_clk),
    .ap_rst_n(ap_rst_n),
    .ap_start(1'b1),
    .ap_done(),
    .ap_idle(),
    .ap_ready(),
    .Input_1_V_TDATA(tdata2),
    .Input_1_V_TVALID(tvalid2),
    .Input_1_V_TREADY(tready2),
    .Output_1_V_TDATA(v2_buffer_V_dout),
    .Output_1_V_TVALID(v2_buffer_V_empty_n),
    .Output_1_V_TREADY(Loop_VITIS_LOOP_36_4_proc4_U0_v2_buffer_V_read)
);

InterfaceWrapper1 InterfaceWrapper1_inst(
    .clk(ap_clk),
    .din_leaf_bft2interface(din_leaf_1),
    .dout_leaf_interface2bft(dout_leaf_1),
    .resend(resend_1),
    .Input_1_V_V(tdata1),
    .Input_1_V_V_ap_vld(tvalid1),
    .Input_1_V_V_ap_ack(tready1),
    .Output_1_V_V(tdata2),
    .Output_1_V_V_ap_vld(tvalid2),
    .Output_1_V_V_ap_ack(tready2),
    .reset(ap_rst_n_inv)
    );

assign dout_leaf_0 = {tvalid3, tdata3[47:0]};
assign dout_leaf_4 = 0;
assign dout_leaf_5 = 0;
assign dout_leaf_6 = 0;
assign dout_leaf_7 = 0;

bft bft_inst(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .dout_leaf_0(dout_leaf_0),
    .dout_leaf_1(dout_leaf_1),
    .dout_leaf_2(dout_leaf_2),
    .dout_leaf_3(dout_leaf_3),
    .dout_leaf_4(dout_leaf_4),
    .dout_leaf_5(dout_leaf_5),
    .dout_leaf_6(dout_leaf_6),
    .dout_leaf_7(dout_leaf_7),
    .din_leaf_0(din_leaf_0),
    .din_leaf_1(din_leaf_1),
    .din_leaf_2(din_leaf_2),
    .din_leaf_3(din_leaf_3),
    .din_leaf_4(din_leaf_4),
    .din_leaf_5(din_leaf_5),
    .din_leaf_6(din_leaf_6),
    .din_leaf_7(din_leaf_7),
    .resend_0(resend_0),
    .resend_1(resend_1),
    .resend_2(resend_2),
    .resend_3(resend_3),
    .resend_4(resend_4),
    .resend_5(resend_5),
    .resend_6(resend_6),
    .resend_7(resend_7)
    );


page_bb page2_inst(
    .clk(ap_clk),
    .din_leaf_bft2interface(din_leaf_2),
    .dout_leaf_interface2bft(dout_leaf_2),
    .resend(resend_2),
    .reset(ap_rst_n_inv)
    );
    
page_bb page3_inst(
    .clk(ap_clk),
    .din_leaf_bft2interface(din_leaf_3),
    .dout_leaf_interface2bft(dout_leaf_3),
    .resend(resend_3),
    .reset(ap_rst_n_inv)
    );
    

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready <= ap_sync_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_output1_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_output1_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_output1_c_channel <= ap_sync_channel_write_output1_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_output2_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_output2_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_output2_c_channel <= ap_sync_channel_write_output2_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_output_size_c_channel <= 1'b0;
    end else begin
        if (((entry_proc_U0_ap_done & entry_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_output_size_c_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_output_size_c_channel <= ap_sync_channel_write_output_size_c_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_int_blocking_n_reg <= ap_int_blocking_n;
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    ap_str_blocking_n_reg <= ap_str_blocking_n;
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b1) & (ap_ext_blocking_n == 1'b0))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b1) & (ap_int_blocking_n == 1'b0))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b1) & (ap_str_blocking_n == 1'b0))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

assign Loop_VITIS_LOOP_31_1_proc1_U0_ap_continue = 1'b1;

assign Loop_VITIS_LOOP_31_1_proc1_U0_ap_start = ((ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_VITIS_LOOP_32_2_proc2_U0_ap_continue = ap_sync_continue;

assign Loop_VITIS_LOOP_32_2_proc2_U0_ap_start = output1_c_channel_empty_n;

assign Loop_VITIS_LOOP_35_3_proc3_U0_ap_continue = 1'b1;

assign Loop_VITIS_LOOP_35_3_proc3_U0_ap_start = ((ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready ^ 1'b1) & ap_start);

assign Loop_VITIS_LOOP_36_4_proc4_U0_ap_continue = ap_sync_continue;

assign Loop_VITIS_LOOP_36_4_proc4_U0_ap_start = (output_size_c_channel_empty_n & output2_c_channel_empty_n);

assign ap_channel_done_output1_c_channel = ((ap_sync_reg_channel_write_output1_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_output2_c_channel = ((ap_sync_reg_channel_write_output2_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_channel_done_output_size_c_channel = ((ap_sync_reg_channel_write_output_size_c_channel ^ 1'b1) & entry_proc_U0_ap_done);

assign ap_done = ap_sync_done;

assign ap_ext_blocking_cur_n = 1'b1;

assign ap_ext_blocking_n = (ap_ext_blocking_sub_n & ap_ext_blocking_cur_n);

assign ap_ext_blocking_sub_n = (entry_proc_U0_ap_ext_blocking_n & Loop_VITIS_LOOP_36_4_proc4_U0_ap_ext_blocking_n & Loop_VITIS_LOOP_35_3_proc3_U0_ap_ext_blocking_n & Loop_VITIS_LOOP_32_2_proc2_U0_ap_ext_blocking_n & Loop_VITIS_LOOP_31_1_proc1_U0_ap_ext_blocking_n);

assign ap_idle = ((output_size_c_channel_empty_n ^ 1'b1) & (output2_c_channel_empty_n ^ 1'b1) & (output1_c_channel_empty_n ^ 1'b1) & entry_proc_U0_ap_idle & Loop_VITIS_LOOP_36_4_proc4_U0_ap_idle & Loop_VITIS_LOOP_35_3_proc3_U0_ap_idle & Loop_VITIS_LOOP_32_2_proc2_U0_ap_idle & Loop_VITIS_LOOP_31_1_proc1_U0_ap_idle);

assign ap_int_blocking_cur_n = 1'b1;

assign ap_int_blocking_n = (ap_int_blocking_sub_n & ap_int_blocking_cur_n);

assign ap_int_blocking_sub_n = (entry_proc_U0_ap_int_blocking_n & Loop_VITIS_LOOP_36_4_proc4_U0_ap_int_blocking_n & Loop_VITIS_LOOP_35_3_proc3_U0_ap_int_blocking_n & Loop_VITIS_LOOP_32_2_proc2_U0_ap_int_blocking_n & Loop_VITIS_LOOP_31_1_proc1_U0_ap_int_blocking_n);

assign ap_ready = ap_sync_ready;

assign ap_str_blocking_cur_n = 1'b1;

assign ap_str_blocking_n = (ap_str_blocking_sub_n & ap_str_blocking_cur_n);

assign ap_str_blocking_sub_n = (entry_proc_U0_ap_str_blocking_n & Loop_VITIS_LOOP_36_4_proc4_U0_ap_str_blocking_n & Loop_VITIS_LOOP_35_3_proc3_U0_ap_str_blocking_n & Loop_VITIS_LOOP_32_2_proc2_U0_ap_str_blocking_n & Loop_VITIS_LOOP_31_1_proc1_U0_ap_str_blocking_n);

assign ap_sync_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready = (ap_sync_reg_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready | Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready);

assign ap_sync_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready = (ap_sync_reg_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready | Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready);

assign ap_sync_channel_write_output1_c_channel = ((output1_c_channel_full_n & ap_channel_done_output1_c_channel) | ap_sync_reg_channel_write_output1_c_channel);

assign ap_sync_channel_write_output2_c_channel = ((output2_c_channel_full_n & ap_channel_done_output2_c_channel) | ap_sync_reg_channel_write_output2_c_channel);

assign ap_sync_channel_write_output_size_c_channel = ((output_size_c_channel_full_n & ap_channel_done_output_size_c_channel) | ap_sync_reg_channel_write_output_size_c_channel);

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (Loop_VITIS_LOOP_36_4_proc4_U0_ap_done & Loop_VITIS_LOOP_32_2_proc2_U0_ap_done);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc_U0_ap_ready & ap_sync_Loop_VITIS_LOOP_35_3_proc3_U0_ap_ready & ap_sync_Loop_VITIS_LOOP_31_1_proc1_U0_ap_ready);

assign entry_proc_U0_ap_continue = (ap_sync_channel_write_output_size_c_channel & ap_sync_channel_write_output2_c_channel & ap_sync_channel_write_output1_c_channel);

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign event_done = ap_done;

endmodule //ydma
